% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_abund_bpdp.R
\name{data_abund_bpdp}
\alias{data_abund_bpdp}
\title{Calculate data to construct bivariate partial dependence plots}
\usage{
data_abund_bpdp(
  model,
  predictors,
  resolution = 50,
  training_data = NULL,
  invert_transform = NULL,
  response_name = NULL,
  training_boundaries = NULL,
  projection_data = NULL,
  sample_size = NULL,
  training_raster = NULL,
  x_coord = NULL,
  y_coord = NULL
)
}
\arguments{
\item{model}{object returned by any fit_abund or tune_abund family functions}

\item{predictors}{character. Vector with two predictor name(s) to plot. If NULL all predictors will be plotted. Default NULL}

\item{resolution}{numeric. Number of equally spaced points at which to predict continuous predictors. Default 50}

\item{training_data}{data.frame or tibble. Database with response (0,1) and predictor values used to fit a model. Default NULL}

\item{invert_transform}{logical. Invert transformation of response variable. Useful for those cases that the response variable was transformed with one of the method in \code{\link{adm_transform}}. Default NULL}

\item{response_name}{character. Name of the response variable. Default NULL}

\item{training_boundaries}{character. Plot training conditions boundaries based on training data (i.e., presences, presences and absences, etc). If training_boundaries = "convexh", function will delimit training environmental region based on a convex-hull. If training_boundaries = "rectangle", function will delimit training environmental region based on four straight lines. If used any methods it is necessary provide data in training_data argument. If NULL all predictors will be used. Default NULL.}

\item{projection_data}{SpatRaster. Raster layer with environmental variables used for model projection. Default NULL}

\item{sample_size}{vector. For CNN only. A vector containing the dimensions, in pixels, of raster samples. See cnn_make_samples beforehand. Default c(11,11)}

\item{training_raster}{a terra SpatRaster object. For CNN only. A raster containing the predictor variables used in tune_abund_cnn or fit_abund_cnn.}

\item{x_coord}{character. For CNN only. The name of the column containing longitude information for each observation.}

\item{y_coord}{character. For CNN only. The name of the column containing latitude information for each observation.}
}
\value{
A list with two tibbles "pdpdata" and "resid".
\itemize{
\item pdpdata: has data to construct partial dependence bivariate plot, the first two column includes
values of the selected environmental variables, the third column the predicted suitability.
\item training_boundaries: has data to plot boundaries of training data.
}
}
\description{
Calculate data to construct bivariate partial dependence for two predictor set
}
\examples{
\dontrun{
require(dplyr)
require(terra)

# Load data
envar <- system.file("external/envar.tif", package = "adm") \%>\%
  rast()
data("sppabund")
some_sp <- sppabund \%>\%
  filter(species == "Species one")

# Fit some models
mglm <- fit_abund_glm(
  data = some_sp,
  response = "ind_ha",
  predictors = c("bio12", "elevation", "sand"),
  predictors_f = c("eco"),
  partition = ".part",
  distribution = "ZAIG",
  poly = 3,
  inter_order = 0,
  predict_part = TRUE
)

# Prepare data for Bivariate Partial Dependence Plots
bpdp_data <- data_abund_bpdp(
  model = mglm,
  predictors = c("bio12", "sand"),
  resolution = 25,
  training_data = some_sp,
  response_name = "Abundance",
  projection_data = envar,
  training_boundaries = "convexh"
)

bpdp_data
}
}
\seealso{
\code{\link{data_abund_pdp}}, \code{\link{p_abund_pdp}}, \code{\link{p_abund_bpdp}}
}
